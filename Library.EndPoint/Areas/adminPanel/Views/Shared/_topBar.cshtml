@using Identity.Domain.Entities.User
@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}

<header class="navbar navbar-expand-lg bg-body-tertiary shadow mb-4">
    <div class="container-fluid">
        @await Component.InvokeAsync("OverdueCount")

        <partial name="_search" />

        <div class="navbar-nav">
            @if (SignInManager.IsSignedIn(User))
            {

                <div class="nav-item text-nowrap">
                    <a href="#" class="nav-link px-3" data-bs-toggle="modal" data-bs-target="#logoutModal">
                        <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                        Sign out
                    </a>
                </div>

            }
            else
            {
                <div class="nav-item text-nowrap">
                    <a class="nav-link px-3" asp-area="default" asp-controller="Auth" asp-action="Register">Register</a>
                </div>
                <div class="nav-item text-nowrap">
                    <a class="nav-link px-3" asp-area="default" asp-controller="Auth" asp-action="Login" asp-route-returnUrl=@Context.Request.Path>Login</a>
                </div>
            }
        </div>
    </div>
</header>


<script>
    function GoToMemberBorrowsPage(userId) {
        window.location.href = '/adminPanel/Home/MemberBorrows?memberId=' + userId;
    }
</script>