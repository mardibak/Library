@using LibInventory.DomainContracts.Inventory;
@* @model List<InventoryOperationViewModel> *@

@using X.PagedList
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model IPagedList<InventoryOperationViewModel>

@{
    ViewData["Title"] = "Operation Log";
}

<div class="card border-primary">
    <div class="card-body">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Number</th>
                    <th>Date</th>
                    <th>Operations</th>
                    <th>Current Balance</th>
                    <th>Operator</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="text-white @(item.Operation ? "bg-success" : "bg-danger")">
                        <td>@item.Id</td>
                        <td>@item.Count</td>
                        <td>@item.OperationDate</td>
                        <td>
                            @if (item.Operation)
                            {
                                <span>Increase</span>
                            }
                            else
                            {
                                <span>Decrease</span>
                            }
                        </td>
                        <td>@item.CurrentCount</td>
                        <td>@item.Operator</td>
                        <td>@item.Description</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    Page : @Html.PagedListPager(Model, page => Url.Action("OperationLog", new { page = page }),
                    new PagedListRenderOptions {
                    ClassToApplyToFirstListItemInPager = null,
                    ClassToApplyToLastListItemInPager = null,
                    ContainerDivClasses = new [] { "pagination-container" },
                    UlElementClasses = new[] { "pagination" },

                    DisplayLinkToIndividualPages = true,
                    DisplayPageCountAndCurrentLocation = false,
                    MaximumPageNumbersToDisplay = 7,

                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                    })
                </tr>
            </tfoot>
        </table>
    </div>

    <div>
        <a class="btn btn-secondary" asp-controller="Inventory" asp-action="Index">Back to list</a>
    </div>
</div>

