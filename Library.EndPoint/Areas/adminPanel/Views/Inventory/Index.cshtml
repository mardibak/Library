@using Library.EndPoint.Areas.adminPanel.Models;
@model InventoryViewModelWithSearchModel

@{
    ViewData["Title"] = "Inventory";
}

<div class="card border-primary mb-3">
    <div class="card-header">
        <h5 class="card-title"> Search in Inventory </h5>
    </div>
    <div class="card-body">
        <div class="card-text mb-3">Even if all the entities of a book have been loaned, you can search for that book.</div>
        <form asp-controller="Inventory" asp-action="Index" class="form-inline" role="form" method="post">
            <div class="form-group">
                <label class="sr-only" asp-for="SearchModel.BookId"></label>
                <select class="form-control" asp-for="SearchModel.BookId" asp-items="Model.Books">
                    <option value="0"> Select Book </option>
                </select>
            </div>
            <div class="form-group ml-2">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault" asp-for="SearchModel.InStock" />
                    <label class="form-check-label" for="flexSwitchCheckDefault" asp-for="SearchModel.InStock">
                        Search in loaned books
                    </label>
                </div>
            </div>
            <button type="submit" class="btn btn-success ml-2">Search</button>
            <a class="btn btn-primary ml-2" asp-action="Index">Show All</a>
        </form>
    </div>
</div>

<div class="card border-primary">
    <div class="card-body">
        <h5 class="card-title"> Amount on this page (@Model.Inventory.Items.Count)</h5>
        <p class="card-text">You can add inventory of every book and see log of that</p>
        <a class="btn btn-primary mb-3" asp-controller="Inventory" asp-action="Create">
            Create New
        </a>
        <table id="datatable" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Book Name</th>
                    <th>Unit Price</th>
                    <th>Amount in stock</th>
                    <th>Creation Date</th>
                    <th>Operstions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Inventory.Items)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Book</td>
                        <td>@item.UnitPrice</td>
                        <td>@item.CurrentCount</td>
                        <td>@item.CreationDate</td>
                        <td>
                            @*@Html.ActionLink("Update", "Update", new { id = item.Id})*@
                            <a class="btn btn-warning waves-effect waves-light m-b-5"
                               asp-controller="Inventory" asp-action="Update" asp-route-id="@item.Id">
                                <i class="fa fa-edit"></i> Edit
                            </a>
                            @*@Html.ActionLink("Increase", "Increase", new { id = item.Id})*@
                            <a class="btn btn-success waves-effect waves-light m-b-5"
                               asp-controller="Inventory" asp-action="Increase" asp-route-id="@item.Id">
                                <i class="fa fa-plus"></i> Increase
                            </a>
                            @*@Html.ActionLink("Reduce", "Reduce", new { id = item.Id})*@
                            <a class="btn btn-danger waves-effect waves-light m-b-5"
                               asp-controller="Inventory" asp-action="Decrease" asp-route-id="@item.Id">
                                <i class="fa fa-minus"></i> Decrease
                            </a>
                            @*@Html.ActionLink("Log", "Log", new { id = item.Id})*@
                            <a class="btn btn-primary waves-effect waves-light m-b-5"
                               asp-controller="Inventory" asp-action="OperationLog" asp-route-id="@item.Id">
                                <i class="fa fa-recycle"></i> Inventory Log
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="10">
                        <nav aria-label="Page navigation">
                            <ul class="pagination">
                                @if (Model.Inventory.HasPreviousPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.Inventory.PageIndex - 1)">Previous</a>
                                    </li>
                                }
                                @for (int i = 1; i <= Model.Inventory.TotalPages; i++)
                                {
                                    <li class="page-item @(i == Model.Inventory.PageIndex ? "active" : "")">
                                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                                    </li>
                                }
                                @if (Model.Inventory.HasNextPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.Inventory.PageIndex + 1)">Next</a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
    <div class="card-footer">
        <span>Total Count: <b>@Model.Inventory.TotalCount</b></span>
    </div>
</div>


