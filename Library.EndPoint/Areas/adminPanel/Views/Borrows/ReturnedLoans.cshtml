@using LibBook.DomainContracts.Borrow;
@using static Library.EndPoint.Areas.adminPanel.Controllers.BorrowsController;
@model PaginatedList<LoanDto>

@* @using X.PagedList
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model IPagedList<LoanDto>
 *@
@{
    ViewData["Title"] = "Returned Loans";
}

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">

            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <table id="datatable" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>#</th>

                                    <th>Book Title</th>
                                    <th>Member</th>
                                    <th>Employee</th>
                                    <th>Borrow Date</th>
                                    <th>Ideal Return Date</th>
                                    <th>Return Employee</th>
                                    <th>Return Date</th>
                                    <th>Description</th>
                                    <th>Operations</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td>@item.Id</td>

                                        <td>@item.BookTitle</td>
                                        <td>@item.MemberId</td>
                                        <td>@item.EmployeeId</td>
                                        <td>@item.CreationDate</td>
                                        <td>@item.IdealReturnDate</td>
                                        <td>@item.ReturnEmployeeId</td>
                                        <td>@item.ReturnDate</td>
                                        <td>@item.Description</td>
                                        <td>
                                            <a class="btn btn-info pull-right m-rl-5" asp-action="Details" asp-route-id="@item.Id">
                                                <i class="fa fa-info"></i>Details
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <div class="card">
                                        <span class="card-body bg-secondary text-white">Total Count: <b>@Model.TotalCount</b></span>
                                    </div>
                                </tr>
                                <tr>
                                    <td colspan="10">
                                        <nav aria-label="Page navigation">
                                            <ul class="pagination">
                                                @if (Model.HasPreviousPage)
                                                {
                                                    <li class="page-item">
                                                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex - 1)" asp-route-SearchModel="@Model">Previous</a>
                                                    </li>
                                                }
                                                @for (int i = 1; i <= Model.TotalPages; i++)
                                                {
                                                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                                        <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-SearchModel="@Model">@i</a>
                                                    </li>
                                                }
                                                @if (Model.HasNextPage)
                                                {
                                                    <li class="page-item">
                                                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex + 1)" asp-route-SearchModel="@Model">Next</a>
                                                    </li>
                                                }
                                            </ul>
                                        </nav>
                                    </td>
                                </tr>

                            </tfoot>
                        </table>
@*                         Page : @Html.PagedListPager(Model, page => Url.Action("ReturnedLoans", new { page = page }),
                        new PagedListRenderOptions {

                        DisplayLinkToIndividualPages = true,
                        DisplayPageCountAndCurrentLocation = false,
                        MaximumPageNumbersToDisplay = 7,

                        LiElementClasses = new string[] { "page-item" },
                        PageClasses = new string[] { "page-link" }
                        }) *@
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
