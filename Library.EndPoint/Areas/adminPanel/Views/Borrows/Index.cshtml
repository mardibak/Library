@using Library.EndPoint.Areas.adminPanel.Models;
@model LendViewModel

@{
    ViewData["Title"] = "Loans";
}

<div class="card border-primary mb-3">
    <div class="card-header">
        <h5 class="card-title"> Search in loans </h5>
    </div>
    <div class="card-body">
        <div class="card-text mb-3">For a more detailed search, fill in all fields.</div>
        <form asp-controller="Borrows" asp-action="Index" class="form-inline" role="form" method="post">
            <div class="form-group">
                <label class="sr-only" asp-for="SearchModel.MemberName"></label>
                <input class="form-control" asp-for="SearchModel.MemberName" placeholder="Member Name">
            </div>
            <div class="form-group ml-2">
                <label class="sr-only" asp-for="SearchModel.EmployeeName"></label>
                <input class="form-control" asp-for="SearchModel.EmployeeName" placeholder="Employee Name">
            </div>
            <div class="form-group ml-2">
                <label class="sr-only" asp-for="SearchModel.BookId"></label>
                <select class="form-control" asp-for="SearchModel.BookId" asp-items="Model.Books">
                    <option value="0">Book</option>
                </select>
            </div>
            <div class="btn-group ml-2">
                <button type="submit" class="btn btn-success waves-effect waves-light m-l-10">Search</button>
                <a class="btn btn-primary waves-effect waves-light m-l-10" asp-action="Index">Show All</a>
            </div>
        </form>
    </div>
</div>


<div class="card border-primary">
    <div class="card-body">
        <h5 class="card-title"> All loans </h5>
        <div class="card-text mb-3">Except for deleted loans, all loans are visible.</div>
        <table id="datatable" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>#</th>

                    <th>Book</th>
                    <th>Member</th>
                    <th>Employee</th>
                    <th>Borrow Date</th>
                    <th>Ideal Return Date</th>
                    <th>Return Employee</th>
                    <th>Return Date</th>
                    <th>Description</th>
                    <th>Operations</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Loans.Items)
                {
                    <tr>
                        <td>@item.Id</td>

                        <td>@item.BookTitle</td>
                        <td>@item.MemberName</td>
                        <td>@item.EmployeeName</td>
                        <td>@item.CreationDate.ToShortDateString()</td>
                        <td>@item.IdealReturnDate.ToShortDateString()</td>
                        <td>@item.ReturnEmployeeName</td>
                        <td>@item.ReturnDate</td>
                        <td>@item.Description</td>
                        <td>
                            <a class="btn btn-info pull-right m-rl-5" asp-action="Details" asp-route-id="@item.Id">
                                <i class="fa fa-info"></i>Details
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="10">
                        <nav aria-label="Page navigation">
                            <ul class="pagination">
                                @if (Model.Loans.HasPreviousPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.Loans.PageIndex - 1)">Previous</a>
                                    </li>
                                }
                                @for (int i = 1; i <= Model.Loans.TotalPages; i++)
                                {
                                    <li class="page-item @(i == Model.Loans.PageIndex ? "active" : "")">
                                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                                    </li>
                                }
                                @if (Model.Loans.HasNextPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.Loans.PageIndex + 1)">Next</a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
    <div class="card-footer">
        <span class="card-text">Total Count: <b>@Model.Loans.TotalCount</b></span>
    </div>
</div>




