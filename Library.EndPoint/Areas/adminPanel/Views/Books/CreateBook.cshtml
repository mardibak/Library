@using Library.EndPoint.Areas.adminPanel.Models;
@model BookCreateViewModel

@{
    ViewData["Title"] = "Create ++";
}

<h1 class="bg-info text-white">@ViewData["Title"]</h1>


<div class="row">
    <div class="col-md-6">
        <form asp-action="CreateBook" method="post">


            <div class="form-group">
                <label asp-for="Title">Book Title:</label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ISBN">ISBN:</label>
                <input asp-for="ISBN" class="form-control" />
                <span asp-validation-for="ISBN" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Code">Code:</label>
                <input asp-for="Code" class="form-control" />
                <span asp-validation-for="Code" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description">Description:</label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="row">
                @*                 <div class="col-md-6">
                <div class="form-group">
                <label class="control-label" asp-for="CategoryId">Choose a Category:</label>
                <select class="form-control" asp-for="CategoryId"
                asp-items='new SelectList(Model.Categories,"Name")'>
                <option value="">Select Category</option>
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>
                </div> *@

                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="CategoryId" class="control-label">Choose a Category</label>
                        <select class="form-control" asp-for="CategoryId"
                                asp-items='new SelectList(Model.BookCategories, "Id", "Name")'>
                            <option value="">Select Category</option>
                        </select>
                        <span class="text-danger" asp-validation-for="CategoryId" class="error"></span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label type="text" class="control-label">Authors:</label>
                <select class="form-control" id="authorInput" asp-items='new SelectList(Model.Authors,"Name")'>
                    <option value="">Select Author</option>
                </select>
                <button type="button" id="addAuthorButton" class="btn btn-primary">Add</button>
                <ul id="selectedAuthorsList" class="list-group">
                    <!-- selected list... -->
                </ul>
                <span id="duplicateAuthorError" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label type="text" class="control-label">Publishers:</label>
                <select class="form-control" id="publisherInput" asp-items='new SelectList(Model.Publishers,"Name")'>
                    <option value="">Select Publisher</option>
                </select>
                <button type="button" id="addPublisherButton" class="btn btn-primary">Add</button>
                <ul id="selectedPublishersList" class="list-group">
                    <!-- selected list... -->
                </ul>
                <span id="duplicatePublisherError" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label type="text" class="control-label">Translators:</label>
                <select class="form-control" id="translatorInput" asp-items='new SelectList(Model.Translators,"Name")'>
                    <option value="">Select Translator</option>
                </select>
                <button type="button" id="addTranslatorButton" class="btn btn-primary">Add</button>
                <ul id="selectedTranslatorsList" class="list-group">
                    <!-- selected list... -->
                </ul>
                <span id="duplicateTranslatorError" class="text-danger"></span>
            </div>

            @* <input type="hidden" name="CategoryId" value="@Model.CategoryId" /> *@

            <input type="hidden" name="SelectedAuthors" id="SelectedAuthors"  />
            <input type="hidden" name="SelectedPublishers" id="SelectedPublishers" />
            <input type="hidden" name="SelectedTranslators" id="SelectedTranslators" />


            <button type="submit" class="btn btn-primary">Save</button>
            <a class="btn btn-secondary" asp-action="Index">Back To Book List</a>
        </form>
    </div>
</div>



<script>
    // save selected list
    var selectedAuthors = [];
    var selectedTranslators = [];
    var selectedPublishers = [];

    function initializeSelectionLists() {
        selectedAuthors = [];
        selectedTranslators = [];
        selectedPublishers = [];
    }

    // Is Repeated ??
    function isDuplicate(itemName, selectedItemList) {
        return selectedItemList.includes(itemName);
    }

    // // add to selectedItemList
    // function addToSelectedList(inputId, listId, errorId, selectedItemList {
    //     var input = document.getElementById(inputId);
    //     var inputValue = input.value.trim();

    //     if (inputValue !== "") {
    //         if (!isDuplicate(inputValue, selectedItemList)) {
    //             var selectedList = document.getElementById(listId);
    //             var listItem = document.createElement("li");
    //             listItem.className = "list-group-item";
    //             listItem.textContent = inputValue;

    //             // Add deleted button to items
    //             var removeButton = document.createElement("button");
    //             removeButton.className = "btn btn-danger btn-sm float-left";
    //             removeButton.textContent = "Delete";
    //             removeButton.onclick = function () {
    //                 selectedItemList = selectedItemList.filter(function (item) {
    //                     return item !== inputValue;
    //                 });
    //                 selectedList.removeChild(listItem);
    //             };
    //             listItem.appendChild(removeButton);


    //             selectedItemList.push(inputValue); // add item to selectedItemList
    //             selectedList.appendChild(listItem);
    //             input.value = ""; // clear input
    //             document.getElementById(errorId).textContent = ""; // clear warn
    //         } else {
    //             document.getElementById(errorId).textContent = "Is Repeated.";
    //         }
    //     }
    // }
    // // add selected author
    // document.getElementById("addAuthorButton").addEventListener("click", function () {
    //     addToSelectedList("authorInput", "selectedAuthorsList", "duplicateAuthorError", selectedAuthors);
    // });
    // // add selected Translator
    // document.getElementById("addTranslatorButton").addEventListener("click", function () {
    //     addToSelectedList("translatorInput", "selectedTranslatorsList", "duplicateTranslatorError", selectedTranslators);
    // });

    // // add selected Publisher
    // document.getElementById("addPublisherButton").addEventListener("click", function () {
    //     addToSelectedList("publisherInput", "selectedPublishersList", "duplicatePublisherError", selectedPublishers);
    // });
    //ـــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــــ
    ////////////////////////////////////////////////////////////////////////////////////
   

    // تابع اضافه کردن نویسنده منتخب به لیست
    function addToSelectedList(inputId, listId, errorId, selectedItemList) {
        var input = document.getElementById(inputId);
        var inputValue = input.value.trim();

        if (inputValue !== "") {
            if (!isDuplicate(inputValue, selectedItemList)) {
                var selectedList = document.getElementById(listId);
                var listItem = document.createElement("li");
                listItem.className = "list-group-item";
                listItem.textContent = inputValue;

                // Add deleted button to items
                var removeButton = document.createElement("button");
                removeButton.className = "btn btn-danger btn-sm float-left";
                removeButton.textContent = "Delete";
                removeButton.onclick = function () {
                    selectedItemList = selectedItemList.filter(function (item) {
                        return item !== inputValue;
                    });
                    selectedList.removeChild(listItem);
                    updateHiddenFields(); // اینجا مقادیر فیلدهای مخفی را به‌روز کنید
                };
                listItem.appendChild(removeButton);

                // اضافه کردن مورد به لیست انتخابی
                selectedItemList.push(inputValue);
                selectedList.appendChild(listItem);
                input.value = ""; // پاک کردن مقدار ورودی
                document.getElementById(errorId).textContent = ""; // پاک کردن هشدار
                updateHiddenFields(); // اینجا مقادیر فیلدهای مخفی را به‌روز کنید
            } else {
                document.getElementById(errorId).textContent = "تکراری است.";
            }
        }
    }

    // تابع برای به‌روز کردن مقادیر فیلدهای مخفی
    function updateHiddenFields() {
        var selectedAuthors = selectedAuthors.join(",");
        var selectedPublishers = selectedPublishers.join(",");
        var selectedTranslators = selectedTranslators.join(",");

        console.log("SelectedAuthors: " + selectedAuthors);
        console.log("SelectedPublishers: " + selectedPublishers);
        console.log("SelectedTranslators: " + selectedTranslators);

        document.getElementById("SelectedAuthors").value = selectedAuthors;
        document.getElementById("SelectedPublishers").value = selectedPublishers;
        document.getElementById("SelectedTranslators").value = selectedTranslators;
    }


    // add selected author
    document.getElementById("addAuthorButton").addEventListener("click", function () {
        addToSelectedList("authorInput", "selectedAuthorsList", "duplicateAuthorError", selectedAuthors);
    });
    // add selected Translator
    document.getElementById("addTranslatorButton").addEventListener("click", function () {
        addToSelectedList("translatorInput", "selectedTranslatorsList", "duplicateTranslatorError", selectedTranslators);
    });

    // add selected Publisher
    document.getElementById("addPublisherButton").addEventListener("click", function () {
        addToSelectedList("publisherInput", "selectedPublishersList", "duplicatePublisherError", selectedPublishers);
    });

</script>


